name: Database Backup

on: 
  workflow_dispatch:
    inputs:
      backup_type:
        description: 'Type of backup to create'
        required: true
        default: 'full'
        type: choice
        options:
        - full
        - structure-only
        - data-only
  schedule:
    # Run every Sunday at 2 AM UTC
    - cron: '0 2 * * 0'

env:
  MYSQL_HOST: ${{ secrets.DB_HOST }}
  MYSQL_USER: ${{ secrets.DB_USER }}
  MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
  MYSQL_DATABASE: ${{ secrets.DB_NAME }}

jobs:
  database-backup:
    name: Create Database Backup
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup MySQL Client
      run: |
        sudo apt-get update
        sudo apt-get install -y mysql-client
        
    - name: Verify database connection
      run: |
        mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD -e "SELECT 1" $MYSQL_DATABASE
        
    - name: Create database structure dump
      if: ${{ github.event.inputs.backup_type == 'full' || github.event.inputs.backup_type == 'structure-only' }}
      run: |
        mysqldump -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD \
          --single-transaction \
          --routines \
          --triggers \
          --no-data \
          $MYSQL_DATABASE > structure_$(date +%Y%m%d_%H%M%S).sql
        
    - name: Upload structure backup
      if: ${{ github.event.inputs.backup_type == 'full' || github.event.inputs.backup_type == 'structure-only' }}
      uses: actions/upload-artifact@v4
      with:
        name: database-structure-${{ github.run_number }}
        path: structure_*.sql
        retention-days: 30
        
    - name: Create database data dump
      if: ${{ github.event.inputs.backup_type == 'full' || github.event.inputs.backup_type == 'data-only' }}
      run: |
    - name: Create database data dump
      if: ${{ github.event.inputs.backup_type == 'full' || github.event.inputs.backup_type == 'data-only' }}
      run: |
        # Create a selective data dump excluding sensitive user tables
        mysqldump -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD \
          --single-transaction \
          --no-create-info \
          --where="1 limit 1000" \
          --ignore-table=$MYSQL_DATABASE.tb_usuarios \
          --ignore-table=$MYSQL_DATABASE.tb_conta \
          --ignore-table=$MYSQL_DATABASE.tb_personagens \
          --ignore-table=$MYSQL_DATABASE.tb_mensagens \
          --ignore-table=$MYSQL_DATABASE.tb_chat \
          --ignore-table=$MYSQL_DATABASE.tb_log_acesso \
          --ignore-table=$MYSQL_DATABASE.tb_combate_log \
          --ignore-table=$MYSQL_DATABASE.tb_relatorio \
          $MYSQL_DATABASE > data_sample_$(date +%Y%m%d_%H%M%S).sql
        
    - name: Upload data backup
      if: ${{ github.event.inputs.backup_type == 'full' || github.event.inputs.backup_type == 'data-only' }}
      uses: actions/upload-artifact@v4
      with:
        name: database-data-${{ github.run_number }}
        path: data_*.sql
        retention-days: 7
        
    - name: Create backup summary
      run: |
        echo "# Database Backup Summary" > backup-summary.md
        echo "- **Date**: $(date)" >> backup-summary.md
        echo "- **Type**: ${{ github.event.inputs.backup_type || 'scheduled' }}" >> backup-summary.md
        echo "- **Database**: $MYSQL_DATABASE" >> backup-summary.md
        echo "- **Run Number**: ${{ github.run_number }}" >> backup-summary.md
        
        if [ -f structure_*.sql ]; then
          echo "- **Structure Size**: $(ls -lh structure_*.sql | awk '{print $5}')" >> backup-summary.md
        fi
        
        if [ -f data_*.sql ]; then
          echo "- **Data Size**: $(ls -lh data_*.sql | awk '{print $5}')" >> backup-summary.md
        fi
        
    - name: Upload backup summary
      uses: actions/upload-artifact@v4
      with:
        name: backup-summary-${{ github.run_number }}
        path: backup-summary.md
        retention-days: 90
