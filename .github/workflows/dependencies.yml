name: Dependency Management

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update to perform'
        required: true
        default: 'security'
        type: choice
        options:
        - security
        - minor
        - major

jobs:
  audit-dependencies:
    name: Audit Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        tools: composer:v2
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: Run security audit
      run: |
        composer audit --format=json > security-audit.json || true
        cat security-audit.json
        
    - name: Check for outdated packages
      run: |
        composer outdated --direct --format=json > outdated-packages.json || true
        cat outdated-packages.json
        
    - name: Upload audit results
      uses: actions/upload-artifact@v4
      with:
        name: dependency-audit-${{ github.run_number }}
        path: |
          security-audit.json
          outdated-packages.json
        retention-days: 30

  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    if: github.event.inputs.update_type != ''
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        tools: composer:v2
        
    - name: Configure Git
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
    - name: Update security patches only
      if: github.event.inputs.update_type == 'security'
      run: |
        composer update --with-dependencies --prefer-stable --no-progress
        
    - name: Update minor versions
      if: github.event.inputs.update_type == 'minor'
      run: |
        composer update --with-dependencies --prefer-stable --no-progress
        
    - name: Update major versions
      if: github.event.inputs.update_type == 'major'
      run: |
        composer update --with-dependencies --prefer-stable --no-progress
        
    - name: Check if composer.lock changed
      id: composer-changes
      run: |
        if git diff --quiet composer.lock; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Pull Request
      if: steps.composer-changes.outputs.changed == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update ${{ github.event.inputs.update_type }} dependencies"
        title: "ğŸ”„ Update ${{ github.event.inputs.update_type }} dependencies"
        body: |
          This PR updates dependencies based on the "${{ github.event.inputs.update_type }}" update type.
          
          ## Changes
          - Updated PHP dependencies via Composer
          
          ## Testing
          - [ ] Verify no breaking changes
          - [ ] Test critical functionality
          - [ ] Check for deprecation warnings
          
          Auto-generated by GitHub Actions.
        branch: dependency-updates/${{ github.event.inputs.update_type }}-${{ github.run_number }}
        delete-branch: true

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        tools: composer:v2
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: Generate license report
      run: |
        echo "# License Report" > license-report.md
        echo "Generated on: $(date)" >> license-report.md
        echo "" >> license-report.md
        
        # Check for composer licenses
        if command -v composer &> /dev/null; then
          echo "## PHP Dependencies Licenses" >> license-report.md
          composer licenses --format=markdown >> license-report.md || echo "License information not available" >> license-report.md
        fi
        
        cat license-report.md
        
    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report-${{ github.run_number }}
        path: license-report.md
        retention-days: 90

  dependency-graph:
    name: Generate Dependency Graph
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        tools: composer:v2
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: Generate dependency tree
      run: |
        echo "# Dependency Tree" > dependency-tree.md
        echo "Generated on: $(date)" >> dependency-tree.md
        echo "" >> dependency-tree.md
        echo "\`\`\`" >> dependency-tree.md
        composer show --tree >> dependency-tree.md || echo "Dependency tree not available" >> dependency-tree.md
        echo "\`\`\`" >> dependency-tree.md
        
    - name: Upload dependency tree
      uses: actions/upload-artifact@v4
      with:
        name: dependency-tree-${{ github.run_number }}
        path: dependency-tree.md
        retention-days: 30